// Generated by CoffeeScript 1.4.0
(function() {
  var express, http, mongoose, path, root, routes;

  express = require('express');

  routes = require('./routes');

  http = require('http');

  path = require('path');

  mongoose = require('mongoose');

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.App = (function() {
    var db;

    function App() {}

    mongoose.connect('mongodb://localhost/test');

    db = mongooes.connection;

    db.on('error', conosle.error.bind(console, 'connection error:'));

    db.once('open', function() {
      return console.log("Mongoose is a-go");
    });

    app.configure(function() {
      app.set('port', process.env.PORT || 3000);
      app.set('views', __dirname + '/views');
      app.set('view engine', 'jade');
      app.use(express.favicon());
      app.use(express.logger('dev'));
      app.use(express.bodyParser());
      app.use(app.router);
      app.use(express["static"](path.join(__dirname, '/app')));
      return app.use(express.errorHandler());
    });

    return App;

  })();

  app.get('api/champions', routes.champions);

  app.get('api/champions/:name', routes.findChampions);

  app.get('api/protips/:name', routes.getAllUsers);

  app.post('api/protips', routes.postProtip);

  app.get('/form', routes.form);

  app.get('/versus', routes.versus);

  app.get('/test', routes.test);

  app.get('/index', routes.index);

  app.get('/', routes.index);

  http.createServer(app).listen(app.get('port'), function() {
    return console.log("Express server listening on port " + (app.get('port')));
  });

}).call(this);
